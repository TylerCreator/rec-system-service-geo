
# version: '3.8'
# services:
#   db:
#     container_name: "postgres"
#     image: postgres:14.1-alpine
#     restart: always
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=root
#       - POSTGRES_DB=compositions
#     ports:
#       - '5432:5432'
#     volumes: 
#       - db:/var/lib/postgresql/data
# volumes:
#   db:
#     driver: local

# version: '3'
# services:
#   db:
#     image: postgres
#     environment:
#       POSTGRES_DB: yourdbname
#       POSTGRES_USER: yourusername
#       POSTGRES_PASSWORD: yourpassword
#   app:
#     build: .
#     command: npm start
#     volumes:
#       - .:/usr/src/app
#     ports:
#       - '3000:3000'
#     depends_on:
#       - db

version: '3.8'

volumes:
  db:
    driver: local

services:
  app:
    depends_on:
      postgresdb:
       condition: service_healthy
    build: .
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=postgresdb
      - DB_USER=$POSTGRESDB_USER
      - DB_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - DB_NAME=$POSTGRESDB_DATABASE
      - DB_PORT=$POSTGRESDB_DOCKER_PORT 
    restart: always

  postgresdb:
    image: postgres
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    ports:
      - $POSTGRESDB_LOCAL_PORT:$POSTGRESDB_DOCKER_PORT
    volumes:
      - db:/var/lib/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  

 